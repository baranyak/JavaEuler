/**
 * https://projecteuler.net/problem=2
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
package com.baraniak;

import java.util.ArrayList;

public class Problem2 {

    public static void main(String[] args) {
        ArrayList<Integer> fibonacciNumbers = getFibonacciList(4 * 1000 *1000);
        long sum = 0;
        for(int number: fibonacciNumbers){
            if(number % 2 == 0) {
                sum += number;
            }
        }
        System.out.println(sum);
    }

    private static ArrayList<Integer> getFibonacciList(int maxNumber){
        ArrayList<Integer> fibonacciNumbers = new ArrayList<Integer>();
        fibonacciNumbers.add(1);
        fibonacciNumbers.add(1);
        while(true){
            fibonacciNumbers.add(fibonacciNumbers.get(fibonacciNumbers.size() - 1) +
                    fibonacciNumbers.get(fibonacciNumbers.size() - 2));
            if(fibonacciNumbers.get(fibonacciNumbers.size()-1) > maxNumber){
                fibonacciNumbers.remove(fibonacciNumbers.size()-1);
                break;
            }
        }
        return fibonacciNumbers;
    }
}
